### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Benefit {
  benefitCashback: Float
  id: Int
  name: String
}

type Cashback {
  benefitName: String
  cashback: Float
  creditCardId: Int
  creditCardName: String
  merchantId: Int
  merchantName: String
}

type CreditCard {
  creditCardName: String
  id: Int
}

type CreditCardBenefit {
  benefitId: Int
  creditCardId: Int
}

type Link {
  category: String
  description: String
  id: String
  imageUrl: String
  title: String
  url: String
  users: [User]
}

type Merchant {
  id: Int
  merchantCodeId: Int
  merchantName: String
}

type MerchantCategoryCode {
  id: Int
  merchantCategory: String
  merchantCategoryCode: Int
}

type Mutation {
  addBenefit(benefitCashback: Float!, benefitName: String!, merchantCodeId: Int!): Benefit!
  addCreditCard(creditCardName: String!): CreditCard!
  addCreditCardBenefit(benefitId: Int!, creditCardId: Int!): CreditCardBenefit!
  addMerchant(merchantCategoryCode: Int!, merchantName: String!): Merchant!
  addMerchantCategoryCode(merchantCategory: String!, merchantCategoryCode: Int!): MerchantCategoryCode!

  """
  Calculates the cashback amount of a purchase given a merchant, credit card, and purchase amount.
  """
  calculateCashback(creditCardId: Int!, merchantId: Int!, purchaseAmount: Float!): Cashback!
}

type Query {
  benefits: [Benefit]!
  creditCardBenefits: [CreditCardBenefit]!
  creditCards: [CreditCard]!
  links: [Link]!
  merchantCategoryCodes: [MerchantCategoryCode]!
  merchants: [Merchant]!
}

enum Role {
  ADMIN
  USER
}

type User {
  bookmarks: [Link]
  email: String
  id: String
  image: String
  name: String
  role: Role
}
